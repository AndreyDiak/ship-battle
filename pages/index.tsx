import * as EmailValidator from "email-validator";
import { signOut } from 'firebase/auth';
import { addDoc, collection, getDocs } from 'firebase/firestore';
import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import { useAuthState } from 'react-firebase-hooks/auth';
import Header from '../components/Header';
import { auth, db } from '../firebase';

type Props = {
  usersData: string[]
}

const Home: NextPage = ({usersData} : any) => {

  const users: User[] = JSON.parse(usersData);
  const [user, loading] = useAuthState(auth);


  const addFriend = async () => {
    const friendEmail = prompt('Enter your friend email...');

    if(!friendEmail) return null;

    if(EmailValidator.validate(friendEmail) && friendEmail !== user?.email) {
      const friendEmailRef = collection(db, `friends/${user?.uid}/emails`);
      await addDoc(friendEmailRef, {
        email: friendEmail
      })
    }
  }

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="">
        <Header title='Морской бой' />
        <div className="mt-5 grid grid grid-cols-1 lg:grid-cols-2 
        max-w-3xl mx-auto lg:place-items-center lg:h-[100vh]">
          <div className="flex flex-col items-center space-y-2">
            <p className="menuItem">
              <Link href='/find'>
                Начать игру
              </Link>
            </p>
            <p className="menuItem">
              <Link href={`profile/${user?.uid}`}>
                Мой профиль
              </Link>
            </p>
            <p className="menuItem" onClick={addFriend}>
              Добавить друга
            </p>
            <p className="menuItem" onClick={() => signOut(auth)}>Выйти из аккаунта</p>
          </div>
          <div className="">
            <h2 className="bg-slate-200 mt-5 text-center py-2">Список лидеров</h2>
            <div className="flex flex-col items-center space-y-2 mt-4">
              {/* TopList here... */}
              {users.map(user => (
                <Link href={`/profile/${user.id}`}>
                  <div className="border px-2 py-1 w-[350px]
                  flex space-x-1 items-center rounded-md border-blue-400 cursor-pointer
                  hover:bg-blue-100">
                    <p className="text-sm text-center font-bold whitespace-nowrap">
                      {user.displayName}
                    </p>
                    <p className="truncate text-gray-400">
                      <i>{user.email}</i>
                    </p>
                  </div>
                </Link>
              ))}
            </div>
          </div>
        </div>

      </div>
      
    </div>
  )
}

export default Home

export const getStaticProps: GetStaticProps = async () => {

  const usersRef = collection(db, 'users');
  const usersSnap = await getDocs(usersRef);

  return {
    props: {
      usersData: JSON.stringify(usersSnap.docs.map(user => ({
        id: user.id,
        ...user.data()
      })))
    }
  }
}